"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var regions_1 = require("./regions");
var locales_timezones_1 = require("./locales-timezones");
/*
  Loosely checks if someone's in Europe based on their timezone or locale.
  This is not a perfect implementation, as it would potentially
  catch folks that aren't necessarily in the EU, but checking
  the timezone is still a lot cheaper and less invasive than
  using people's IPs to determine their location.
*/
function inEU() {
    return isInEUTimezone() || isEULocale();
}
exports.inEU = inEU;
/*
  Loosely checks that a given locale partially matches an EU country code.
  This won't work perfect for every language, but it should give us some
  extra signal.
  http://ec.europa.eu/eurostat/statistics-explained/index.php?title=Glossary:Country_codes
*/
function isEULocale() {
    var locale = locales_timezones_1.browserLocale();
    var code = locale;
    if (locale.indexOf('-') >= 0) {
        code = locale.split('-')[1];
    }
    return !!regions_1.euCountryCodes[code.toUpperCase()];
}
exports.isEULocale = isEULocale;
function isInEUTimezone() {
    var tz = locales_timezones_1.browserTimezone();
    return tz && tz.indexOf('Europe') >= 0;
}
exports.isInEUTimezone = isInEUTimezone;
